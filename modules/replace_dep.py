# 문과대학, 문과대
# 사회과학대, 사회과학대학, 사과대
# 교육과학대, 교육과학대학
# 상경대학, 상경대


def replace_with_dict(string_val):
    dict_constructed = {
        "경영학과": [
            "경영",
            "경영-경제 이중전공",
            "경영대학",
            "경영대학 경영학과",
            "경영대학 경영학부",
            "경영대학원",
            "경영전공",
            "경영정보학",
            "경영정보학과",
            "경영정보학과&신문방송학과",
            "경영정보학전공",
            "경영학",
            "경영학(복수)",
            "경영학과",
            "경영학과 (컴퓨터 과학)",
            "경영학과 대학원",
            "경영학과 이중전공",
            "경영학과(응통 이중)",
            "경영학과(이중)",
            "경영학관",
            "경영학규ㅏ",
            "경영학부",
            "경영학전공",
        ],
        "경제학과": [
            "경재학과",
            "경제",
            "경제.수학",
            "경제학",
            "경제학 전공",
            "경제학과",
            "경제학과 응용통계학과",
            "경제학부",
            "경제학전공",
            "경제힉과",
        ],
        "영어영문학과": [
            "영문",
            "영문과",
            "영문학",
            "영문학 및 신방과",
            "영문학과",
            "영상디자인전공",
            "영어 영문학과",
            "영어문학과",
            "영어영문",
            "영어영문과",
            "영어영문학",
            "영어영문학 & 경영학",
            "영어영문학 (복수)",
            "영어영문학 및 문화비평학전공",
            "영어영문학과",
            "영어영문학과(경제학과)",
            "영어영문학과과",
            "영어영문학전공",
            "영여영문과",
            "영여영문학과",
        ],
        "정치외교학과": ["정외", "정외과", "정치외교", "정치외교학", "정치외교학과", "정치외교학교", "정치학과"],
        "심리학과": [
            "심리",
            "심리학",
            "심리학 이중전공",
            "심리학 인지과학",
            "심리학과",
            "심리학과 복전",
            "심리학이중전공",
            "심리학전공",
        ],
        "행정학과": ["행정", "행정학", "행정학과", "행정학과 (경영학 이중전공)"],
        "사회학과": ["사회", "사회학", "사회학&신학과", "사회학과", "사회학전공"],
        "교육학과": [
            "교육학",
            "교육학과",
            "교육학과 (영문학 이중전공)",
            "교육학과(국문이중)",
            "교육학과(본교)",
            "교육학과(영어영문 이중전공)",
            "교육학부",
            "교육",
        ],
        "응용통계학과": ["응용통계", "응용통계학", "응용통계학과", "응용통계학전공", "응통"],
        "중어중문학과": [
            "중문",
            "중문학과",
            "중어중문",
            "중어중문하과",
            "중어중문학",
            "중어중문학과",
            "중어중문학과&경영학과",
            "중어중문학전공",
        ],
        "언론홍보영상학": [
            "언론홍보",
            "언론홍보영상",
            "언론홍보영상 (신문방송)",
            "언론홍보영상학",
            "언론홍보영상학과",
            "언론홍보영상학부",
            "언론홍보영상학부(신문방송학과)",
            "언론홍보영상학부",
            "언홍영",
        ],
        "불어불문학과": ["불문", "불어불문", "불어불문학", "불어불문학과", "불어불문학과(미국에서는 언론홍보영상)", "불어불문학전공"],
        "사학과": ["사학", "사학과", "사학과 대학원", "사학사회학", "사학전공"],
        "국어국문학과": [
            "국문",
            "국문학과",
            "국어 국문",
            "국어 국문학과",
            "국어국문",
            "국어국문 신문방송",
            "국어국문학",
            "국어국문학과",
            "국어국문학전공",
        ],
        "의류환경학과": ["의류", "의류환경", "의류환경전공", "의류환경학", "의류환경학과"],
        "독어독문학과": ["독문과", "독문학과", "독어독문", "독어독문 & 언론홍보", "독어독문학", "독어독문학과", "독어독문학전공"],
        "노어노문학과": ["노어노문", "노어노문학", "노어노문학과", "노어노문학전공"],
        "전기전자공학과": [
            "전기전자",
            "전기전자 공학과",
            "전기전자 공학부",
            "전기전자 전공",
            "전기전자공학",
            "전기전자공학과",
            "전기전자공학부",
            "전기전자공학전공",
            "전기전자과",
        ],
        "사회복지학과": ["사회복지", "사회복지학", "사회복지학과"],
        "법학과": ["법학", "법학과", "법과대학 법학"],
        "문화인류학과": ["문화인류", "문화인류학", "문화인류학과"],
        "기계공학과": ["기계", "기계공학", "기계공학과", "기계공학과 (의류환경학과)", "기계공학부", "기계공학전공"],
        "정보산업공학과": ["정보산업공학", "정보산업공학(응용통계 이중)", "정보산업공학과"],
        "건축공학과": [
            "건축공학",
            "건축공학과",
            "건축공학과 건축학(5년제)",
            "건축공학과 건축학전공",
            "건축공학전공",
            "건축과",
            "건축학",
            "건축학(5년제)",
            "건축학과",
            "건축학과 (5년제)",
            "건축학과(5년제)",
            "검축공학과",
            "공과대학 건축공학과",
            "공과대학 건축학과",
        ],
    }

    last_value_list = list(dict_constructed.values())[-1]
    for key, value in dict_constructed.items():
        # print(list(value), type(list(value)))
        if string_val in value:
            string_val = key
            return string_val
        elif string_val not in last_value_list:
            return string_val
        else:
            pass

